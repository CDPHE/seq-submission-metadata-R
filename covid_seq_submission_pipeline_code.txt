# I make a new directory for each batch of submissions
# Set unix/linux variable path for wd - so can reuse code across projects
cur_wd="/home/mandy_waters/batch6_submit"

# cd into cur_wd and make directories
mkdir download_fasta
mkdir sequence_data
mkdir metadata

# In cur_wd make a file called project_list.txt that lists the projects to be submitted - with one project per line (I used vim to add, but users can use text editor if preferred)
COVMIN_0154rr
COVMIN_0155
COVMIN_0156rr
COVMIN_0157
COVMIN_0158
COVMIN_0159rr
COVMIN_0160

# Pull metadata from Google Drive - pull results*.tsv files for all projects into 'metadata' dir

# generate gisaid and biosample metadata using gisaid_ncbi_biosample_metadata_formatting.R - I write these files file the 'metadata' dir
./gisaid_ncbi_biosample_metadata_formatting.R -m ${cur_wd}/metadata -s mandy.waters -f batch6_gisaid_inital_upload.fa -t "Oxford Nanopore GridION"

# I got a warning that some samples were missing collection dates, so Shannon provided those dates from a list of accession IDs, which are printed to the terminal and an output file.  Users need to manually updated the GISAID, Biosample, and rename metadata files:
# gisaid_submission_*_metadata.csv:
	# column: covv_virus_name add year to end of name
	# column: covv_collection_date add collection date in format YYYY-MM-DD
# ncbi_biosample_submission_*_metadata.tsv
	# column: collection_date add collection date in format YYYY-MM-DD
# fasta_rename_accession_to_gisaid_id.csv
	# column: gisaid_name add year to end of name
# Alternatively, you could add the dates into the results*.tsv file.  If you do this then delete the original metadata files written out (it will mess up later code if you keep 2 sets of files), update the results*.tsv files, and then rerun the R script

# Get list of files with >= 50% coverage and rerun samples removed
cut -f 1 ncbi_biosample_submission*_metadata.tsv > fasta_headers_50cov.txt

# pull consensus fastas only for samples >50% coverage and rerun samples removed to 'download_fasta' dir
while read name gisaid proj; do gsutil -m cp -r gs://covid_terra/${proj}/terra_outputs/assemblies/${name}_consensus_renamed.fa .; done < ${cur_wd}/metadata/fasta_rename_accession_to_gisaid_id.tsv

# Concat all downloaded fastas in 'download_fasta' dir
cat *_consensus_renamed.fa > raw_concat.fa

# Delete the original & individ files
rm *_consensus_renamed.fa

# Pull fastas with > 50% coverage
seqtk subseq raw_concat.fa ${cur_wd}/metadata/fasta_headers_50cov.txt > subset_50cov.fa

# Testing new indel finder
# clone and create new conda environment
conda activate indel_finder_env

# Run indel finder
sars-cov-2_indel_finder/indel_finder.py -i ${cur_wd}/download_fasta/subset_50cov.fa -o ${cur_wd}/download_fasta --ref_path /home/mandy_waters/ref_seq/reference.fasta --prefix batch6

# Pulling bam files for samples with insertions - making file to pull them
grep '+' *indels.csv | cut -f 1 -d ',' > indel_finder_insertion_accession_names.txt
grep '+' *indels.csv > coverage_info_insertions.csv
sort -t , -k 3 coverage_info_insertions.csv

# Pulling project and accession information from the sequencing results file
while read name; do grep $name ${cur_wd}/metadata/results_*.tsv >> failed_to_pull_bam_files.txt; done < indel_finder_insertion_accession_names.txt

# Getting only the information we need
cut -f 28-29 failed_to_pull_bam_files.txt > project_accessions_failed.txt

# pull bam files from google buckets
while read project acc; do gsutil cp gs://covid_terra/${project}/terra_outputs/alignments/${acc}*.bam .; done < project_accessions_failed.txt

# index the bam files to load into IGV
for i in *.bam; do samtools index $i; done

# Rename seq names with GISAID format
awk -F, 'FNR==NR {f2[$1]=$2;next} $2 in f2 {$2=f2[$2]}1' ${cur_wd}/metadata/fasta_rename_accession_to_gisaid_id.csv FS='>' OFS='>' batch6.alignment.fasta > post_indel_concat_gisaid_format.fa

# Removing dashes from the MSA from indel finder as VADR doesn't accept dashes
sed '/^>/! s/-//g' post_indel_concat_gisaid_format.fa > post_indel_concat_gisaid_format_nodash.fa

# Run VADR 1.3 on entire dataset
docker run --rm=True -v $PWD:/data -u $(id -u):$(id -g) staphb/vadr:1.3 v-annotate.pl --split --cpu 8 --glsearch -s -r --nomisc --mkey sarscov2 --lowsim5seq 2 --lowsim3seq 2 --alt_fail lowscore,insertnn,deletinn post_indel_concat_gisaid_format_nodash.fa vadr_run

# Pulling samples for IGV in vadr_run
sed 's/hCoV-19\/USA\/CO-CDPHE-//g' vadr_run.vadr.fail.list > accessions_failed_to_pull.csv
sed -i -e 's/\/202.*//g' accessions_failed_to_pull.csv
while read name; do grep $name ${cur_wd}/metadata/results*.tsv >> failed_to_pull_bam_files.txt; done < accessions_failed_to_pull.csv
cut -f 28-29 failed_to_pull_bam_files.txt > project_accessions_failed.txt

while read project acc; do gsutil cp gs://covid_terra/${project}/terra_outputs/alignments/${acc}*.bam .; done < project_accessions_failed.txt

for i in *.bam; do samtools index $i; done

# Use Aliview to see and correct sequences based on IGV
# Read in: post_indel_concat_gisaid_format.fa
# Write out: batch6_gisaid_initial_upload.fa

# Files uploaded to GISAID
# metadata: gisaid_submission_2021-09-06_metadata.csv
# fasta: batch6_gisaid_initial_upload.fa

# Submit biosample metadata
ncbi_biosample_submission_2021-08-26_metadata.tsv

# download file from Biosample - from email BioSampleObjects.txt to 'metadata' dir

# Create metadata for SRA
./ncbi_sra_metadata_formatting.R -p ${cur_wd}/metadata -t "Oxford Nanopore GridION"

# Pull seqs for SRA - in sequence_data dir
# NOTE: This code is specific for Nanopore
while read name
do
bash ~/scripts/git_repo/seq-submission-metadata-R/get_cat_gzip_fastq.sh $name
done < ${cur_wd}/project_list.txt

# get files to keep for upload to SRA in 'metadata' dir
cut -f 13 ncbi_sra_submission_*metadata.tsv | sed 's/"//g' | grep -v '^file' > fastqs_to_keep.tsv

# Deleting files don't need to upload in 'sequence_data' dir
for i in *fastq.gz; do
    if ! grep -qxFe "$i" ${cur_wd}/metadata/fastqs_to_keep.tsv; then
    	echo "Deleting: $i"
        rm "$i"
    fi
done

# Upload to SRA
# metadata:
/home/mandy_waters/aspera-connect/connect/bin/ascp -i /home/mandy_waters/Downloads/aspera.openssh -d ${cur_wd}/sequence_data subasp@upload.ncbi.nlm.nih.gov:uploads/mandy.waters_state.co.us_WRKu59ly

# Pulling GISAID failed accessions - same might not be caught by VADR and some are, so check your notes from sequence edits to submit to GISAID
# Add in accessions from the unreleased metadata file - I use VIM to write file: samples_reject_gisaid_to_pull.txt
sed -i 's/hCoV-19\/USA\/CO-CDPHE-//g' samples_reject_gisaid_to_pull.txt
sed -i 's/\/2021//g' samples_reject_gisaid_to_pull.txt
sed -i 's/\/2020//g' samples_reject_gisaid_to_pull.txt

while read name; do grep $name ${cur_wd}/metadata/results_*.tsv >> gisaid_failed_pull_bam_files.txt; done < samples_reject_gisaid_to_pull.txt

cut -f 28-29 gisaid_failed_pull_bam_files.txt > gisaid_project_accession_failed.txt

# pull files
while read project acc; do gsutil cp gs://covid_terra/${project}/terra_outputs/alignments/${acc}*.bam .; done < gisaid_project_accession_failed.txt

for i in *.bam; do samtools index $i; done

# check in Alivew and IGV
# read in: batch6_gisaid_initial_upload.fa
# write out: batch6_gisaid_reeupload_all_seqs.fa

# Pulling those sequences
seqkit grep -n -f gisaid_accesions_failed.txt batch6_gisaid_reeupload_all_seqs.fa -o batch6_gisaid_reupload_seq.fa

# Reupload to GISAID
batch6_gisaid_reupload_seq.fa

# Download file from SRA: metadata-10377804-processed-ok.tsv
# Download file from GISAID: gisaid_hcov-19_2021_09_16_22.tsv

# Create NCBI metadata sheet
Rscript ncbi_genbank_metadata_formatting.R -p ${cur_wd}/metadata -t "Oxford Nanopore GridION"

# Getting fasta file ready for NCBI
sed '/^>/! s/-//g' batch6_gisaid_reeupload_all_seqs.fa > batch6_ncbi_genbank_corrected.fasta
awk '{if (substr($1, 1, 1)==">") print $0" [bioproject=PRJNA686984]"; else print $0}' batch6_ncbi_genbank_corrected.fasta > batch6_ncbi_genbank_corrected_proj.fasta

# files uploaded to GenBank
# metadata: ncbi_genbank_submission_2021-09-16_metadata.tsv
# fasta: batch6_ncbi_genbank_corrected_proj.fasta

# Download accessions.txt from NCBI email and rename
mv accessions.txt seqids.txt
mv seqids.txt ~/batch6_submit/metadata

# create final submission metadata and add to excel spreadsheet
Rscript submission_completed_metadata.R -p ${cur_wd}/metadata -s mandy.waters
