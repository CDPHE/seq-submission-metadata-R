# I make a new directory for each batch of submissions
# Set unix/linux variable path for wd - so can reuse code across projects
cur_wd="/home/mandy_waters/batch9_submit"

# cd into cur_wd and make directories
mkdir download_fasta
mkdir sequence_data
mkdir metadata

# In cur_wd make a file called project_list.txt that lists the projects to be submitted - with one project per line (I used vim to add, but users can use text editor if preferred)
COVMIN_0168
COVMIN_0169
COVMIN_0170
COVMIN_0171
COVMIN_0172
COVMIN_0173
COVMIN_0174

# Pull metadata from Google Drive - pull results*.tsv files for all projects into 'metadata' dir

# Downloaded updated re-run sample file from Google Drive and rename
mv List_of_bad_runs_and_waste_water_samples\ -\ re-run_samples.tsv rerun_samples_$(date +%d%b%Y).tsv

# Download updated completed sample file from Google Drive and rename
mv SUBMISSIONS_and_compiled_metadata.xlsx\ -\ COMPLETED_submissions_metadata.tsv completed_submissions_$(date +%d%b%Y).tsv

# generate gisaid and biosample metadata using gisaid_ncbi_biosample_metadata_formatting.R - I write these files file the 'metadata' dir
Rscript /home/mandy_waters/scripts/git_repo/seq-submission-metadata-R/gisaid_ncbi_biosample_metadata_formatting.R -m ${cur_wd}/metadata -s mandy.waters -f batch9_gisaid_inital_upload.fa -t "Oxford Nanopore GridION" -r /home/mandy_waters/Downloads/rerun_samples_19Sep2021.tsv -c /home/mandy_waters/Downloads/completed_submissions_19Sep2021.tsv

# none of my samples were resequenced, so I can download them all to same directory 

# Submit biosample metadata, so you can work in parallel while samples are being approved 
ncbi_biosample_submission_2021-09-19_metadata.tsv

# Get list of files with >= 50% coverage
cut -f 1 ncbi_biosample_submission*_metadata.tsv > fasta_headers_50cov.txt

# pull consensus fastas to 'download_fasta' dir
while read name; do gsutil -m cp -r gs://covid_terra/${name}/terra_outputs/assemblies/*_consensus_renamed.fa .; done < ${cur_wd}/project_list.txt

# Concat all downloaded fastas in 'download_fasta' dir
cat *_consensus_renamed.fa > raw_concat.fa

# Pull fastas with > 50% coverage
seqtk subseq raw_concat.fa ${cur_wd}/metadata/fasta_headers_50cov.txt > subset_50cov.fa

# Check length of subset_50cov.fa against the metadata.  If metadata data file is N+1 then you can delete the original *_consensus_renamed.fa
# Delete the original & individ files
rm *_consensus_renamed.fa

# Run indel finder
conda activate indel_finder_env
/home/mandy_waters/scripts/sars-cov-2_indel_finder/indel_finder.py -i ${cur_wd}/download_fasta/subset_50cov.fa -o ${cur_wd}/download_fasta --ref_path /home/mandy_waters/ref_seq/reference.fasta --prefix batch9

# pull out and accession names that have insertions to check
grep '+' *indels.csv | cut -f 1 -d ',' > indel_finder_insertion_accession_names.txt
grep '+' *indels.csv > coverage_info_insertions.csv
sort -t , -k 3 coverage_info_insertions.csv

# Pulling project and accession information from the sequencing results file
while read name; do grep $name ${cur_wd}/metadata/results_*.tsv >> failed_to_pull_bam_files.txt; done < indel_finder_insertion_accession_names.txt 

# Getting only the information we need
cut -f 28-29 failed_to_pull_bam_files.txt > project_accessions_failed.txt

# pull bam files from google buckets
while read project acc; do gsutil cp gs://covid_terra/${project}/terra_outputs/alignments/${acc}*.bam .; done < project_accessions_failed.txt

# index the bam files to load into IGV
for i in *.bam; do samtools index $i; done

# Rename seq names with GISAID format
awk -F, 'FNR==NR {f2[$1]=$2;next} $2 in f2 {$2=f2[$2]}1' ${cur_wd}/metadata/fasta_rename_accession_to_gisaid_id.csv FS='>' OFS='>' batch9.alignment.fasta > post_indel_concat_gisaid_format.fa

# Removing dashes from the MSA from indel finder as VADR doesn't accept dashes
sed '/^>/! s/-//g' post_indel_concat_gisaid_format.fa > post_indel_concat_gisaid_format_nodash.fa

# Run VADR 1.3 on entire dataset
docker run --rm=True -v $PWD:/data -u $(id -u):$(id -g) staphb/vadr:1.3 v-annotate.pl --split --cpu 8 --glsearch -s -r --nomisc --mkey sarscov2 --lowsim5seq 2 --lowsim3seq 2 --alt_fail lowscore,insertnn,deletinn post_indel_concat_gisaid_format_nodash.fa vadr_run

# Pulling samples for IGV in vadr_run
sed 's/hCoV-19\/USA\/CO-CDPHE-//g' vadr_run.vadr.fail.list > accessions_failed_to_pull.csv
sed -i -e 's/\/202.*//g' accessions_failed_to_pull.csv 
while read name; do grep $name ${cur_wd}/metadata/results*.tsv >> failed_to_pull_bam_files.txt; done < accessions_failed_to_pull.csv
cut -f 28-29 failed_to_pull_bam_files.txt > project_accessions_failed.txt

while read project acc; do gsutil cp gs://covid_terra/${project}/terra_outputs/alignments/${acc}*.bam .; done < project_accessions_failed.txt

for i in *.bam; do samtools index $i; done

# Use Aliview to see and correct sequences based on IGV
# Read in: post_indel_concat_gisaid_format.fa
# Write out: batch9_gisaid_initial_upload.fa

# Files uploaded to GISAID
# metadata: gisaid_submission_2021-09-19_metadata.csv
# fasta: batch9_gisaid_initial_upload.fa

# download file from Biosample - from email BioSampleObjects.txt to 'metadata' dir

# Create metadata for SRA
Rscript /home/mandy_waters/scripts/git_repo/seq-submission-metadata-R/ncbi_sra_metadata_formatting.R -p ${cur_wd}/metadata -t "Oxford Nanopore GridION"

# Pull seqs for SRA - in sequence_data dir
# NOTE: This code is specific for Nanopore
while read name
do
bash ~/scripts/git_repo/seq-submission-metadata-R/get_cat_gzip_fastq.sh $name
done < ${cur_wd}/project_list.txt

# I don't have any samples that have been previously submitted or rerun, so I can move all files into the sequence_data directory 

# get files to keep for upload to SRA in 'metadata' dir
cut -f 13 ncbi_sra_submission_*metadata.tsv | sed 's/"//g' | grep -v '^file' > fastqs_to_keep.tsv

# Deleting files don't need to upload in 'sequence_data' dir
for i in *fastq.gz; do
    if ! grep -qxFe "$i" ${cur_wd}/metadata/fastqs_to_keep.tsv; then 
    	echo "Deleting: $i"
        rm "$i"
    fi
done

# Upload to SRA
# metadata: 
/home/mandy_waters/aspera-connect/connect/bin/ascp -i /home/mandy_waters/Downloads/aspera.openssh -d ${cur_wd}/sequence_data subasp@upload.ncbi.nlm.nih.gov:uploads/mandy.waters_state.co.us_WRKu59ly
